# -*- coding: utf-8 -*-
"""Handwritten Digits Recognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uj6yjvDZqP7HiZsxNabQuaxYfHKxn-4e

# Importing libraries
"""

import tensorflow as tf
from tensorflow import keras

import numpy as np
import matplotlib.pyplot as plt

"""# Loading dataset with images"""

mnist = tf.keras.datasets.mnist
(images_train, labels_train),(images_test, labels_test) = mnist.load_data()

"""# Labels for classification"""

class_names = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']

"""# Display image of example"""

plt.figure()
plt.imshow(images_train[0])
plt.colorbar()
plt.grid(False)
plt.xlabel('Classification label: {}'.format(labels_train[0]))
plt.show()

"""# Normalize data (Images)"""

images_train = images_train / 255.0
images_test = images_test / 255.0

"""# Training Model"""

model = tf.keras.models.Sequential([
    tf.keras.layers.Flatten(input_shape=(28,28)),
    tf.keras.layers.Dense(512, activation=tf.nn.relu),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(512, activation=tf.nn.relu),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(10, activation=tf.nn.softmax)
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(images_train, labels_train, epochs=16)

"""# Evaluate Model"""

test_loss, test_acc = model.evaluate(images_test, labels_test)
  print('Test accuracy: ', test_acc)

"""# Save Model"""

keras_file = "digit.h5"
tf.keras.models.save_model(model, keras_file)
converter = tf.lite.TFLiteConverter.from_keras_model(model)
tfmodel = converter.convert()
open("digit.tflite", "wb").write(tfmodel)